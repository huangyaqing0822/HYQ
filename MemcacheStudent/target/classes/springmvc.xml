<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
	"
	>

	<!-- 自动扫描基包，将类加载到Spring容器中 -->
	<context:component-scan base-package="com.lxit.ssm" />

	<!-- 视图解析器：将逻辑视图转发到对应的物理视图 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 将静态资源交由tomcat来处理 -->
	<mvc:default-servlet-handler />

	<!-- 注册类型转换器 -->
	<mvc:annotation-driven />

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/ssm" />
		<property name="user" value="root" />
		<property name="password" value="root" />
		<!-- 队列中的最小连接数 -->
		<property name="minPoolSize" value="15"></property>
		<!-- 队列中的最大连接数 -->
		<property name="maxPoolSize" value="25"></property>
		<!-- 当连接耗尽时创建的连接数 -->
		<property name="acquireIncrement" value="15"></property>
		<!-- 等待时间 -->
		<property name="checkoutTimeout" value="10000"></property>
		<!-- 初始化连接数 -->
		<property name="initialPoolSize" value="20"></property>
		<!-- 最大空闲时间，超出时间连接将被丢弃 -->
		<property name="maxIdleTime" value="20"></property>
		<!-- 每隔60秒检测空闲连接 -->
		<property name="idleConnectionTestPeriod" value="60000"></property>
	</bean>

	<!-- Spring扫描所有的mapper文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 设置连接池对象 -->
		<property name="dataSource" ref="dataSource" />
		<!-- Mappper所在的包路径 -->
		<property name="mapperLocations" value="classpath:com/lxit/ssm/dao/*.xml" />
		<!-- 指定mybatis的配置文件 -->
		<property name="configLocation" value="classpath:mybatis.xml"></property>
	</bean>
	<!-- Spring 扫描DAO包 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- DAO包所在的包路径 -->
		<property name="basePackage" value="com.lxit.ssm.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	
	<!-- memcached缓存 -->
	<!-- 客户端：java_memcached-release_2.6.3 -->
	<bean id="memcachedPool" class="com.whalin.MemCached.SockIOPool"
		factory-method="getInstance" init-method="initialize" lazy-init="false"
		destroy-method="shutDown">
		<!-- 可以设置多个memcached服务器 -->
		<property name="servers">
			<list>
				<value>127.0.0.1:11211</value>
				<value>192.168.18.43:11211</value>
			</list>
		</property>
		<property name="weights">
			<list>
				<value>1</value>
				<value>1</value>
			</list>
		</property>
		<!-- 每个服务器初始连接数 -->
		<property name="initConn">
			<value>20</value>
		</property>
		<!-- 每个服务器最小连接数 -->
		<property name="minConn">
			<value>20</value>
		</property>
		<!-- 每个服务器最大连接数 -->
		<property name="maxConn">
			<value>1000</value>
		</property>
		<!-- 主线程睡眠时间 -->
		<property name="maintSleep">
			<value>30000</value>
		</property>
		<!-- TCP/Socket的参数，如果是true在写数据时不缓冲，立即发送出去参数 -->
		<property name="nagle">
			<value>false</value>
		</property>
		<!-- 连接超时/阻塞读取数据的超时间是 -->
		<property name="socketTO">
			<value>3000</value>
		</property>
	</bean>
	<bean id="memcachedClient" class="com.whalin.MemCached.MemCachedClient" />
	
	
</beans>
